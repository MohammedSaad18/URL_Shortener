{"version":3,"sources":["components/listItems.js","components/LineChart.js","components/Linkstable.js","components/DonutChart.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","ChartFunc","defaults","global","responsive","maintainAspectRatio","LineChart","props","useState","data","labels","Data","setData","useEffect","url","shortcode","axios","get","then","response","ctx","document","getElementById","type","datasets","label","backgroundColor","borderColor","borderWidth","Fragment","id","width","height","columns","minWidth","useStyles","makeStyles","root","container","maxHeight","StickyHeadTable","rows","setRows","classes","React","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","className","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","align","style","TableBody","slice","row","hover","role","tabIndex","onClick","onURLView","cursor","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","value","OsChart","console","log","options","plugins","legend","position","title","display","text","animation","animateScale","animateRotate","Copyright","Typography","variant","color","Link","href","Date","getFullYear","theme","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","open","setOpen","setShortcode","fixedHeightPaper","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","noWrap","Drawer","Divider","List","Container","maxWidth","Grid","item","xs","md","lg","Paper","DonutChart","Box","pt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d38a1543.chunk.js","sourcesContent":["import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n  </div>\n);\n","import React, { useEffect, useState } from \"react\";\nimport { Chart as ChartFunc } from \"chart.js\";\nimport axios from \"axios\";\n\nChartFunc.defaults.global.responsive = true;\nChartFunc.defaults.global.maintainAspectRatio = false;\n\nconst LineChart = (props) => {\n  let [Data, setData] = useState({ data: [], labels: [] });\n\n  useEffect(() => {\n    const url = `http://localhost:8000/api/lineplot/${props.shortcode}`;\n    axios.get(url).then((response) => setData(response.data));\n  }, [props.shortcode]);\n\n  useEffect(() => {\n    const ctx = document.getElementById(\"myChart\");\n    new ChartFunc(ctx, {\n      type: \"line\",\n      data: {\n        labels: Data.labels,\n        datasets: [\n          {\n            label: \"# of Votes\",\n            data: Data.data,\n            backgroundColor: [\"white\"],\n            borderColor: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n            borderWidth: 1,\n          },\n        ],\n      },\n    });\n  }, [Data]);\n\n  return (\n    <React.Fragment>\n      <canvas id=\"myChart\" width=\"1\" height=\"1\" />\n    </React.Fragment>\n  );\n};\n\nexport default LineChart;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\n\nconst columns = [\n  { id: \"url\", label: \"URL\", minWidth: 150 },\n  { id: \"shortcode\", label: \"ShortCode\", minWidth: 90 },\n  { id: \"viewbutton\", label: \"\", minWidth: 50 },\n];\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return { name, code, population, size, density };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport default function StickyHeadTable(props) {\n  let [rows, setRows] = useState([]);\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/api/shorturls/\")\n      .then((response) => setRows(response.data));\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <React.Fragment>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow\n                    hover\n                    role=\"checkbox\"\n                    tabIndex={-1}\n                    key={row.shortcode}\n                  >\n                    <TableCell>{row.url}</TableCell>\n                    <TableCell>{row.shortcode}</TableCell>\n                    <TableCell>\n                      <TimelineIcon\n                        onClick={() => props.onURLView(row.shortcode)}\n                        cursor=\"pointer\"\n                      />\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Chart as ChartFunc } from \"chart.js\";\nimport axios from \"axios\";\n\nChartFunc.defaults.global.responsive = true;\nChartFunc.defaults.global.maintainAspectRatio = false;\n\nconst OsChart = (props) => {\n  let [Data, setData] = useState({ data: [], labels: [] });\n\n  useEffect(() => {\n    const url = props.url + props.shortcode;\n    axios.get(url).then((response) => setData(response.data));\n  }, [props.url, props.shortcode]);\n\n  useEffect(() => {\n    console.log(props.id);\n    const ctx = document.getElementById(props.id);\n    new ChartFunc(ctx, {\n      type: \"doughnut\",\n      data: {\n        labels: Data.labels,\n        datasets: [\n          {\n            label: \"# of Votes\",\n            data: Data.data.length === 0 ? [0] : Data.data,\n            backgroundColor: [\n              \"rgb(54, 162, 235)\",\n              \"rgb(255, 205, 86)\",\n              \"rgb(153, 102, 255)\",\n              \"rgb(255, 99, 132)\",\n              \"rgb(255, 159, 64)\",\n              \"rgb(75, 192, 192)\",\n              \"rgb(201, 203, 207)\",\n            ],\n            borderColor: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: \"top\",\n          },\n          title: {\n            display: true,\n            text: \"Top Countries\",\n          },\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true,\n        },\n      },\n    });\n  }, [Data]);\n\n  return (\n    <React.Fragment>\n      <canvas id={props.id} width=\"1\" height=\"1\" />\n    </React.Fragment>\n  );\n};\n\nexport default OsChart;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { mainListItems, secondaryListItems } from \"./listItems\";\nimport LineChart from \"./LineChart\";\nimport StickyHeadTable from \"./Linkstable\";\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport DonutChart from \"./DonutChart\"\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        URL Shortner\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [shortcode, setShortcode] = React.useState(\"\");\n\n  const handleURLView = (shortcode) => {\n    setShortcode(shortcode);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Dashboard\n          </Typography>\n            <Link color=\"inherit\" href=\"http://localhost:8000/logout/\">\n              <MeetingRoomIcon/>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n          <Divider />\n          <List>{mainListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={12} lg={12}>\n              <Paper className={fixedHeightPaper}>\n                <LineChart shortcode={shortcode} />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={4}>\n              <Paper className={fixedHeightPaper}>\n                <DonutChart \n                shortcode={shortcode}\n                id=\"CountryChart\"\n                url = \"http://localhost:8000/api/countryplot/\" />\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={4} lg={4}>\n              <Paper className={fixedHeightPaper}>\n                <DonutChart \n                shortcode={shortcode}\n                id=\"OsChart\"\n                url = \"http://localhost:8000/api/osplot/\" />\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={4} lg={4}>\n              <Paper className={fixedHeightPaper}>\n                <DonutChart \n                shortcode={shortcode}\n                id=\"RefererChart\"\n                url = \"http://localhost:8000/api/refererplot/\" />\n              </Paper>\n            </Grid>\n\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <StickyHeadTable onURLView={handleURLView} />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nfunction App() {\n  return (\n    <React.Fragment>\n      <Dashboard />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}